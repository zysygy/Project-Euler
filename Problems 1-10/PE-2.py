"""
Project Euler: Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

#Na√Øve Brute Force Method
"""
Iterate through all numbers in Fibonacci sequence up to 4 million, adding all even terms along the way
"""

max = 4000000

def bruteForceFibSum ():
    n1 = 1
    n2 = 2
    sum = 2 #start at 2 as it's even
    next = 0
    while (next < 4000000):
        next = n1+n2
        if (next % 2 == 0):
            sum += next
        n1 = n2
        n2 = next
    print ("Sum is: ",  sum)
    
bruteForceFibSum()

#Small Optimization
"""
Observe first 4 even Fibonacci numbers
2, 8, 34, 144

Follows pattern of FE_n = 4*FE_(n-1) + FE_(n-2) (need induction to prove, but good enough for now)
eg. 144 = 4*34 + 8

Using this formula saves about 2/3 of the inspections as every 3rd Fibonacci number is even
"""

